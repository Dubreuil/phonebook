{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","filterText","handleFilterChange","value","onChange","PersonForm","newName","newNumber","submitHandler","handleNameChange","handleNumberChange","onSubmit","type","Person","person","deleteHandler","name","number","onClick","Notification","message","className","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","filterValue","setFilterValue","personsToDisplay","setPersonsToDisplay","notificationMessage","setNotificationMessage","notificationType","setNotificationType","useEffect","personService","initialPersons","undefined","displays","filter","toLowerCase","includes","event","target","preventDefault","find","p","window","confirm","changedPerson","updatedPerson","map","setTimeout","catch","createdPerson","concat","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a495c97b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({filterText, handleFilterChange}) => \r\n    <div>\r\n        Name Filter: <input value={filterText} onChange={handleFilterChange} />\r\n    </div>\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({newName, newNumber, submitHandler, handleNameChange, handleNumberChange}) => {\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div>name: <input value={newName} onChange={handleNameChange} /></div>\r\n            <div>number: <input value={newNumber} onChange={handleNumberChange} /></div>\r\n            <div>\r\n                <button type=\"submit\">Add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Person = ({ person, deleteHandler }) => {\r\n    return (\r\n        <div>\r\n            <span>{person.name} {person.number}</span>\r\n            <button onClick={deleteHandler}>Delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst Notification = ({ type, message }) => {\r\n    if (message === null) {\r\n        return null\r\n    } \r\n    else {\r\n        return (\r\n            <div className={type}>\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then()\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Person from './components/Person'\r\nimport Notification from './components/Notification'\r\n\r\nimport personService from './services/persons'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ filterValue, setFilterValue ] = useState('')\r\n  const [ personsToDisplay, setPersonsToDisplay ] = useState(persons)\r\n  const [ notificationMessage, setNotificationMessage ] = useState(null)\r\n  const [ notificationType, setNotificationType ] = useState(null)\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n  }, [])\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n\r\n    const person = persons.find(p => p.name === newName)\r\n\r\n    if (person !== undefined) {\r\n        if (window.confirm(`${newName} is aleady in the phonebook, do you want to update their phone number?`)) {\r\n          \r\n          const changedPerson = { ...person, number:newNumber }\r\n          \r\n          personService\r\n            .update(person.id, changedPerson)\r\n            .then(updatedPerson => {\r\n              setPersons(persons.map(p => p.id !== updatedPerson.id ? p : updatedPerson))\r\n              setNotificationType(\"success\")\r\n              setNotificationMessage(`${updatedPerson.name} was updated`)\r\n              setTimeout(() => {\r\n                setNotificationMessage(null)\r\n              }, 5000)\r\n            })\r\n            .catch(() => {\r\n              setPersons(persons.filter(p => p.id !== person.id))\r\n              setNotificationType(\"failure\")\r\n              setNotificationMessage(`${changedPerson.name} was previously deleted`)\r\n              setTimeout(() => {\r\n                setNotificationMessage(null)\r\n              }, 5000)\r\n            })\r\n        }\r\n    }\r\n\r\n    else {\r\n      const personObject = {name:newName, number:newNumber}\r\n      \r\n      personService\r\n        .create(personObject)\r\n        .then(createdPerson => {\r\n          setPersons(persons.concat(createdPerson))\r\n          setNotificationType(\"success\")\r\n          setNotificationMessage(`${createdPerson.name} was added`)\r\n          setTimeout(() => {\r\n            setNotificationMessage(null)\r\n          }, 5000)\r\n        })\r\n    }\r\n\r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  const removePerson = id => {\r\n    if (window.confirm(\"Really delete this user?\")) {\r\n      personService\r\n        .remove(id)\r\n        .then(() => {\r\n          personService\r\n            .getAll()\r\n            .then(persons => {\r\n            setPersons(persons)\r\n          })\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleNameChange = (event) => setNewName(event.target.value)\r\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\r\n  const handleFilterChange = (event) => setFilterValue(event.target.value.toLowerCase())\r\n\r\n  useEffect(() => {\r\n    if (persons !== undefined) {\r\n      const displays = persons.filter(person => {\r\n        return person.name.toLowerCase().includes(filterValue)\r\n      })\r\n\r\n      setPersonsToDisplay(displays)\r\n    }\r\n  }, [persons, filterValue])\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <Notification type={notificationType} message={notificationMessage} />\r\n      <Filter filterText={filterValue} handleFilterChange={handleFilterChange} />\r\n      <h2>New numbers</h2>\r\n      <PersonForm newName={newName} newNumber={newNumber} submitHandler={addPerson} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\r\n      <h2>Numbers</h2>\r\n      <div>\r\n        {personsToDisplay.map(person => {\r\n          return (<Person key={person.name} person={person} deleteHandler={() => removePerson(person.id) } />)\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}